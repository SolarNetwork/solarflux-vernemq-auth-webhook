plugins {
    id 'checkstyle'
    id 'java'
    id 'war'
    id 'eclipse'
    id 'eclipse-wtp'
    id 'org.springframework.boot' version '1.5.16.RELEASE'
}

apply plugin: 'checkstyle'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    jcenter()
	maven {
		url "https://data.solarnetwork.net/archive/repository/solarnetwork-stage/"
	}
}

ext {
	jacksonVersion = '2.9.7'
	springBootVersion = '1.5.16.RELEASE'
	springVersion = '4.3.19.RELEASE'
	checkstyleVersion = '8.5'
}

configurations {
	all*.exclude group: 'org.apache.commons', module: 'commons-compress'
	all*.exclude group: 'org.eclipse.virgo.mirrored'
	all*.exclude group: 'org.osgi'
	all*.exclude group: 'org.osgi.core'
	all*.exclude group: 'org.osgi.enterprise'
	all*.exclude group: 'org.springframework', module: 'spring-messaging'
	all*.exclude group: 'org.springframework', module: 'spring-websocket'
	all*.exclude group: 'org.springframework.security'
	all*.exclude group: 'javax.servlet', module: 'com.springsource.javax.servlet'
	all*.exclude group: 'javax.servlet', module: 'com.springsource.javax.servlet'
	all*.exclude group: 'net.sf.supercsv'
}

checkstyle {
	toolVersion = "${checkstyleVersion}"
	configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

dependencies {
	compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
	compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

	// allow WAR to be run from command line OR deployed in Tomcat
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	// DB
	runtime 'org.postgresql:postgresql:42.2.5'
		
	// JSON
	compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
	compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
	compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:${jacksonVersion}"

	// SolarNetwork
	compile 'net.solarnetwork.common:net.solarnetwork.common.web:1.15.0'

	// Utils
    
    // Testing
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
	testCompile 'com.spotify:hamcrest-jackson:1.1.3'
    testCompile 'com.spotify:hamcrest-pojo:1.1.3'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
	project {
		natures 'net.sf.eclipsecs.core.CheckstyleNature'
		buildCommand 'net.sf.eclipsecs.core.CheckstyleBuilder'
	}
	wtp {
		facet {
			facet name: 'jst.java', version: 1.8
			facet name: 'jst.web', version: '3.1'
		}
	}
}

jar {
    baseName = 'solarflux-vernemq-webhook'
    version =  version
    manifest {
        attributes 'Implementation-Title': 'SolarFlux VerneMQ Webhook Server',
                   'Implementation-Version': version
    }
}


war {
    baseName = 'solarflux-vernemq-webhook'
    version =  version
    manifest {
        attributes 'Implementation-Title': 'SolarFlux VerneMQ Webhook Server',
                   'Implementation-Version': version
    }
}
